@model WeatherViewModel

@{
    ViewData["Title"] = "Home Page";
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<h2 class="text-center">Weather Forecast Lookup</h2>

<div class="container">
    @if (Model != null)
    {
        @if (Model.ErrorMessage != null)
        {
            <h2>@Model.ErrorMessage</h2>
        }
        else
        {
            <div class="results">
                <div>
                    <span style="font-size: 20px;">@Model.Location.Name</span>
                </div>
                <div class="result">
                    <img src="@Model.Current.Condition.Icon" height="28" />
                    <span id="currentTemp">@Model.Current.TemperatureCelsius</span>
                    <span style="font-size: 18px;" class="mdi mdi-water-outline"></span>
                    <span>@Model.Current.Humidity</span>
                </div>
                <div class="result">
                    <span style="color: #2b7cb0" class="mdi mdi-thermometer-low"></span>
                    <span id="minTemp">@Model.Day.MinTemperatureCelsius</span>
                    <span style="color: #ff9600" class="mdi mdi-thermometer"></span>
                    <span id="avgTemp">@Model.Day.AverageTemperatureCelsius</span>
                    <span style="color: #a50000" class="mdi mdi-thermometer-high"></span>
                    <span id="maxTemp">@Model.Day.MaxTemperatureCelsius</span>
                </div>
                <div class="result">
                    <span class="mdi mdi-weather-sunset-down"></span>
                    <span>@Model.Astrology.Sunset</span>
                    <span>|</span>
                    <span>@Model.Astrology.Sunrise</span>
                    <span class="mdi mdi-weather-sunset-up"></span>
                </div>
            </div>
        }
    }

    <form asp-controller="Weather" asp-action="Index" style="padding: 20px; width: 40%;">
        <div class="form-floating flex">
            <input type="text" class="form-control" id="location" name="location" placeholder="New York">
            <label for="location">Location</label>
            <button type="submit" class="btn"><span class="mdil mdil-magnify check"></span></button>
        </div>
    </form>

    @if (Model != null && Model.ErrorMessage == null)
    {
        <div style="flex-direction: row;">
            <button type="button" class="btn" id="celsius" value="1" style="color: green"><span class="mdi mdi-temperature-celsius"></span></button>
            <button type="button" class="btn" id="fahrenheit"><span class="mdi mdi-temperature-fahrenheit"></span></button>
        </div>
    }
</div>

<script type="text/javascript">
    var celsiusBtn = document.getElementById("celsius");
    var fahrenheitBtn = document.getElementById("fahrenheit");

    var currentTemp = document.getElementById("currentTemp");
    var minTemp = document.getElementById("minTemp");
    var avgTemp = document.getElementById("avgTemp");
    var maxTemp = document.getElementById("maxTemp");

    var inputField = document.getElementById("location");

    function getAutocompleteData(locationString) {
        $.ajax({
            url: '@Url.Action("AutocompleteData","Weather")',
            type: 'GET',
            data: {
                location: locationString
            },
            success: function (response) {
                // Handle the successful response from the controller
                console.log("success: "+response);
            },
            error: function (xhr, status, error) {
                // Handle any errors that occur during the request
                console.error("error: "+ error);
            }
        });
    }

    var lastInputTime = 0;
    var timeoutPeriod = 10; // in seconds

    inputField.addEventListener("keyup", function(){
        var locationString = inputField.value;
        var currentTime = Date.now();

        console.log("current time: "+currentTime)
        console.log("last typed: "+lastInputTime);
       
        if (locationString.length > 4 && Date.now() - lastInputTime > timeoutPeriod * 1000) {
            lastInputTime = Date.now();
            getAutocompleteData(locationString);
        }
    })
</script>

@if (Model != null && Model.ErrorMessage == null)
{
    <script type="text/javascript">
        fahrenheitBtn.addEventListener("click", function () {
            if (celsiusBtn.value == 1) { // On Fahrenheit, change to Celsius
                currentTemp.textContent = @Model.Current.TemperatureFahrenheit;
                minTemp.textContent = @Model.Day.MinTemperatureFahrenheit;
                avgTemp.textContent = @Model.Day.AverageTemperatureFahrenheit;
                maxTemp.textContent = @Model.Day.MaxTemperatureFahrenheit;

                celsiusBtn.style.color = "black";
                fahrenheitBtn.style.color = "green";

                celsiusBtn.value = 0;
                return
            }
        })

        celsiusBtn.addEventListener("click", function () {
            if (celsiusBtn.value == 0) // On Celsius, change to Fahrenheit
            {
                currentTemp.textContent = @Model.Current.TemperatureCelsius;
                minTemp.textContent = @Model.Day.MinTemperatureCelsius;
                avgTemp.textContent = @Model.Day.AverageTemperatureCelsius;
                maxTemp.textContent = @Model.Day.MaxTemperatureCelsius;

                celsiusBtn.style.color = "green";
                fahrenheitBtn.style.color = "black";

                celsiusBtn.value = 1;
                return
            }
        })
    </script>
}